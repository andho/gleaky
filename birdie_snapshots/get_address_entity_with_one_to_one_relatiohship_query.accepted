---
version: 1.2.7
title: get address entity with one to one relatiohship query
file: ./test/entity_test.gleam
test_name: get_entity_with_relationship_address_query_test
---
Query(
  [
    Table(
      "addresses",
      [
        Address(AddressId),
        Address(Street),
        Address(City),
        Address(AddressCustomer),
      ],
      dict.from_list([
        #(
          Address(AddressCustomer),
          IntColumn(
            Address(AddressCustomer),
            "customer_id",
            ColumnConstraint(
              NotNull,
              ForeignKey(
                [Customer(CustomerId)],
                OnDelete(Restrict),
                OnUpdate(Cascade),
              ),
              NoDefault,
              NotPrimaryKey,
              NotUnique,
            ),
          ),
        ),
        #(
          Address(AddressId),
          IntColumn(
            Address(AddressId),
            "id",
            ColumnConstraint(
              NotNull,
              NoForeignKey,
              NoDefault,
              PrimaryKey,
              NotUnique,
            ),
          ),
        ),
        #(
          Address(City),
          IntColumn(
            Address(City),
            "city",
            ColumnConstraint(
              Null,
              NoForeignKey,
              NoDefault,
              NotPrimaryKey,
              NotUnique,
            ),
          ),
        ),
        #(
          Address(Street),
          StringColumn(
            Address(Street),
            "street",
            ColumnConstraint(
              NotNull,
              NoForeignKey,
              Default(StringValue("Majeedhee Magu")),
              NotPrimaryKey,
              NotUnique,
            ),
          ),
        ),
      ]),
    ),
  ],
  [
    Address(AddressId),
    Address(Street),
    Address(City),
    Address(AddressCustomer),
  ],
  [],
  WhereIn(
    ColumnValue(Address(AddressCustomer)),
    [ScalarValue(IntValue(1))],
  ),
  NotChecked,
)